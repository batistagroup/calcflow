[project]
name = "calcflow"
version = "0.1.0"
authors = [{ name = "Anton Morgunov", email = "anton@ischemist.com" }]
description = "A package to simplify preparing and parsing quantum chemistry calculations."
readme = "README.md"
license = { text = "MIT" } # Or choose another license
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Typing :: Typed",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/yourusername/calcflow"      # Add your repo URL
Issues = "https://github.com/yourusername/calcflow/issues"

[tool.setuptools]
packages = ["calcflow"]
package-dir = { "" = "src" }


[project.optional-dependencies]
dev = [
    "ipykernel>=6.29.5",
    "rich>=13.9.4",
    "pre-commit>=4.1.0",
    "ruff>=0.9.6",
    "pytest>=8.3.4",
    "pytest-cov>=6.1.1",
    "mypy>=1.15.0",
    "mkdocs>=1.6.1",
    "mkdocstrings-python>=1.15.0",
    "mkdocs-material>=9.6.4",
    "types-tqdm>=4.67.0.20241221",
    "tomli>=2.2.1",
]
visualize = ["nbformat>=5.10.4", "plotly>=6.0.1"]

[tool.mypy]
strict = true
ignore_missing_imports = true
exclude = ["tests"]
disable_error_code = ["unused-ignore"]

[[tool.mypy.overrides]]
# RDKit is not typed, so we ignore all errors in it
module = ["rdkit-stubs.*", "rdkit.*"]
ignore_errors = true

[tool.ruff]
line-length = 120
lint.select = [
    "E",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
]
lint.ignore = [
    "E501",   # o respect fmt off blocks
    "SIM108", # disagree w/ https://docs.astral.sh/ruff/rules/if-else-block-instead-of-if-exp/
]
exclude = ["tests"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["E501"] # Ignore line length in tests

[tool.coverage.run]
omit = [
    # omit basis set files
    "*/basis_sets/**/*.py",
    "*/visualize/*.py",
    "*/constants/*",
    "*/__init__.py",
]

# Section below is pretty standard logger configuration

[tool.logging]
version = 1
disable_existing_loggers = false

[tool.logging.formatters.standard]
format = "%(asctime)s [%(levelname)s] %(name)s (%(module)s:%(lineno)d): %(message)s"
datefmt = "%Y-%m-%d %H:%M:%S"

[tool.logging.handlers.console]
class = "logging.StreamHandler"
formatter = "standard"
stream = "ext://sys.stdout"

[tool.logging.loggers.calcflow]
handlers = ["console"]
propagate = true
level = "INFO"
